// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DAL;

#nullable disable

namespace WebApi.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.DAL.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentContent = "Comment1",
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentContent = "Comment2",
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CommentContent = "Comment3",
                            PostId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CommentContent = "Comment4",
                            PostId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CommentContent = "Comment5",
                            PostId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CommentContent = "Comment6",
                            PostId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CommentContent = "Comment7",
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            CommentContent = "Comment8",
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            CommentContent = "Comment9",
                            PostId = 6,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            CommentContent = "Comment10",
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            CommentContent = "Comment11",
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            CommentContent = "Comment12",
                            PostId = 4,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.FriendList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FriendLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FriendId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FriendId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            FriendId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            FriendId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            FriendId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            FriendId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            FriendId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            FriendId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PostId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            PostId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            PostId = 6,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostContent = "Post1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PostContent = "Post2",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            PostContent = "Post3",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            PostContent = "Post4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            PostContent = "Post5",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            PostContent = "Post6",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.RequestFriendList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RequestFriendLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FriendId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FriendId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            FriendId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            FriendId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            FriendId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            FriendId = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            FriendId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            FriendId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            FriendId = 6,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BirthdayDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthdayDate = "10.09.1998",
                            Gender = "Male",
                            Name = "Sasha",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Vysotski"
                        },
                        new
                        {
                            Id = 2,
                            BirthdayDate = "14.01.1999",
                            Gender = "Male",
                            Name = "Pavel",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Motuz"
                        },
                        new
                        {
                            Id = 3,
                            BirthdayDate = "13.06.1999",
                            Gender = "Male",
                            Name = "Artem",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Kasabuka"
                        },
                        new
                        {
                            Id = 4,
                            BirthdayDate = "20.02.1995",
                            Gender = "Male",
                            Name = "Gosha",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Abramshuk"
                        },
                        new
                        {
                            Id = 5,
                            BirthdayDate = "02.08.2001",
                            Gender = "Male",
                            Name = "Tom",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Kruz"
                        },
                        new
                        {
                            Id = 6,
                            BirthdayDate = "23.04.1997",
                            Gender = "Male",
                            Name = "Savva",
                            RegistrationDate = "07.02.2022 18:51",
                            Surname = "Maceralnik"
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Comment", b =>
                {
                    b.HasOne("WebApi.DAL.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("WebApi.DAL.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.FriendList", b =>
                {
                    b.HasOne("WebApi.DAL.Entities.User", "User")
                        .WithMany("FriendLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Like", b =>
                {
                    b.HasOne("WebApi.DAL.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId");

                    b.HasOne("WebApi.DAL.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Post", b =>
                {
                    b.HasOne("WebApi.DAL.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.RequestFriendList", b =>
                {
                    b.HasOne("WebApi.DAL.Entities.User", "User")
                        .WithMany("RequestFriendLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("WebApi.DAL.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FriendLists");

                    b.Navigation("Likes");

                    b.Navigation("Posts");

                    b.Navigation("RequestFriendLists");
                });
#pragma warning restore 612, 618
        }
    }
}
